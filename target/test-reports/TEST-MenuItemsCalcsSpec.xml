<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="LUK-5Q7PLC2" name="MenuItemsCalcsSpec" tests="13" errors="0" failures="1" skipped="0" time="0.135" timestamp="2019-01-29T16:50:06">
                     <properties>
      <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/><property name="java.specification.version" value="11"/><property name="sun.cpu.isalist" value="amd64"/><property name="sun.jnu.encoding" value="Cp1252"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-11.0.1\bin"/><property name="sun.java.command" value="C:\Users\kbahra\.IdeaIC2018.3\config\plugins\Scala\launcher\sbt-launch.jar --addPluginSbtFile=C:\Users\kbahra\AppData\Local\Temp\idea4.sbt idea-shell"/><property name="jdk.debug" value="release"/><property name="sun.stderr.encoding" value="cp850"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2018-10-16"/><property name="java.home" value="C:\Program Files\Java\jdk-11.0.1"/><property name="file.separator" value="\"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="sun.stdout.encoding" value="cp850"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="user.script" value=""/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="11.0.1+13-LTS"/><property name="user.name" value="kbahra"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="C:\Users\kbahra\AppData\Local\Temp\jna--1138149779\jna7954306968239127391.dll"/><property name="java.vendor.version" value="18.9"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="C:\Users\kbahra\AppData\Local\Temp\"/><property name="java.version" value="11.0.1"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/><property name="sun.os.patch.level" value=""/><property name="java.library.path" value="C:\Program Files\Java\jdk-11.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Program Files\Amazon\AWSCLI\bin\;C:\Program Files (x86)\scala\bin;C:\Users\kbahra\AppData\Local\Continuum\anaconda3;C:\Users\kbahra\AppData\Local\Continuum\anaconda3\Library\mingw-w64\bin;C:\Users\kbahra\AppData\Local\Continuum\anaconda3\Library\usr\bin;C:\Users\kbahra\AppData\Local\Continuum\anaconda3\Library\bin;C:\Users\kbahra\AppData\Local\Continuum\anaconda3\Scripts;C:\Users\kbahra\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Java\jre7\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2018.3.3\bin;;."/><property name="java.vendor" value="Oracle Corporation"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.desktop" value="windows"/><property name="java.class.path" value="C:\Users\kbahra\.IdeaIC2018.3\config\plugins\Scala\launcher\sbt-launch.jar"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="user.variant" value=""/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Europe/London"/><property name="os.name" value="Windows 10"/><property name="java.vm.specification.version" value="11"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="GB"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="C:\Users\kbahra"/><property name="user.language" value="en"/><property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/><property name="jline.esc.timeout" value="0"/><property name="path.separator" value=";"/><property name="os.version" value="10.0"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="java.vendor.url.bug" value="http://bugreport.java.com/bugreport/"/><property name="user.dir" value="C:\Users\kbahra\Documents\repo\DDCTEx"/><property name="os.arch" value="amd64"/><property name="idea.managed" value="true"/><property name="java.vm.info" value="mixed mode"/><property name="java.vm.version" value="11.0.1+13-LTS"/><property name="java.class.version" value="55.0"/>
    </properties>
                     <testcase classname="MenuItemsCalcsSpec" name="The total of items should cost £8" time="0.032">
                                                 
                                               </testcase><testcase classname="MenuItemsCalcsSpec" name="50" time="0.0">
                                                 
                                               </testcase><testcase classname="MenuItemsCalcsSpec" name="50" time="0.0">
                                                 
                                               </testcase><testcase classname="MenuItemsCalcsSpec" name="50" time="0.0">
                                                 
                                               </testcase><testcase classname="MenuItemsCalcsSpec" name="if the service charge is more than 20 pounds, there should be a cap set, return the max of £20" time="0.0">
                                                 
                                               </testcase><testcase classname="MenuItemsCalcsSpec" name="if the service charge is equal to £20 there should be a cap set of £20 for the service charge" time="0.0">
                                                 
                                               </testcase><testcase classname="MenuItemsCalcsSpec" name="if the service charge is less than £20 there should be a returned value of the service charge" time="0.0">
                                                 
                                               </testcase><testcase classname="MenuItemsCalcsSpec" name="if items only contain drinks there should be no service charge when drinks are included in the list" time="0.001">
                                                 
                                               </testcase><testcase classname="MenuItemsCalcsSpec" name="if items contain only hot food there should be a 20 % service charge added to the total cost where the service charge is under the cap limit of £20" time="0.002">
                                                 
                                               </testcase><testcase classname="MenuItemsCalcsSpec" name="if items contain only cold food there  should be a 10% service charge added to the total cost where the service charge is under the cap limit of £20" time="0.0">
                                                 
                                               </testcase><testcase classname="MenuItemsCalcsSpec" name="if items contain a combination of drinks and cold food there  should be a 10% service charge added to the total cost where the service charge is under the cap limit of £20" time="0.1">
                                                 <failure message="4.2 was not equal to 3.85" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: 4.2 was not equal to 3.85
	at org.scalatest.MatchersHelper$.indicateFailure(MatchersHelper.scala:340)
	at org.scalatest.Matchers$AnyShouldWrapper.shouldBe(Matchers.scala:6864)
	at MenuItemsCalcsSpec.$anonfun$new$22(MenuItemsCalcsSpec.scala:78)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.WordSpecLike$$anon$1.apply(WordSpecLike.scala:1078)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at org.scalatest.WordSpec.withFixture(WordSpec.scala:1881)
	at org.scalatest.WordSpecLike.invokeWithFixture$1(WordSpecLike.scala:1076)
	at org.scalatest.WordSpecLike.$anonfun$runTest$1(WordSpecLike.scala:1088)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
	at org.scalatest.WordSpecLike.runTest(WordSpecLike.scala:1088)
	at org.scalatest.WordSpecLike.runTest$(WordSpecLike.scala:1070)
	at org.scalatest.WordSpec.runTest(WordSpec.scala:1881)
	at org.scalatest.WordSpecLike.$anonfun$runTests$1(WordSpecLike.scala:1147)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:396)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:373)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:410)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:379)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
	at org.scalatest.WordSpecLike.runTests(WordSpecLike.scala:1147)
	at org.scalatest.WordSpecLike.runTests$(WordSpecLike.scala:1146)
	at org.scalatest.WordSpec.runTests(WordSpec.scala:1881)
	at org.scalatest.Suite.run(Suite.scala:1147)
	at org.scalatest.Suite.run$(Suite.scala:1129)
	at org.scalatest.WordSpec.org$scalatest$WordSpecLike$$super$run(WordSpec.scala:1881)
	at org.scalatest.WordSpecLike.$anonfun$run$1(WordSpecLike.scala:1192)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
	at org.scalatest.WordSpecLike.run(WordSpecLike.scala:1192)
	at org.scalatest.WordSpecLike.run$(WordSpecLike.scala:1190)
	at org.scalatest.WordSpec.run(WordSpec.scala:1881)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:314)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:499)
	at sbt.TestRunner.runTest$1(TestFramework.scala:113)
	at sbt.TestRunner.run(TestFramework.scala:124)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFunction.apply(TestFramework.scala:294)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:309)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:67)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:269)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:278)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:269)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:37)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
</failure>
                                               </testcase><testcase classname="MenuItemsCalcsSpec" name="if items contain a combination of drinks and hot food there should be a 20% service charge added to the total cost where the service charge is under the cap limit of £20" time="0.0">
                                                 
                                               </testcase><testcase classname="MenuItemsCalcsSpec" name="50" time="0.0">
                                                 
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>